### docker-compose.production.yml
services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      ENVIRONMENT: "Production"
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      SECRET_KEY: ${SECRET_KEY}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_REDBEAT_REDIS_URL: ${CELERY_REDBEAT_REDIS_URL}
      CELERY_REDBEAT_KEY_PREFIX: ${CELERY_REDBEAT_KEY_PREFIX}
    ports:
      - 8000:8000
    depends_on:
      - postgres_db
      - redis
    restart: always


  redis:
    image: redis:6.2-alpine
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery_worker:
    build: .
    command: celery -A celery_worker.celery worker --loglevel=info
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_REDBEAT_REDIS_URL: ${CELERY_REDBEAT_REDIS_URL}
      CELERY_REDBEAT_KEY_PREFIX: ${CELERY_REDBEAT_KEY_PREFIX}
    depends_on:
      - fastapi
      - redis

  celery_beat:
    build: .
    command: celery -A celery_worker.celery beat --loglevel=info
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      CELERY_REDBEAT_REDIS_URL: ${CELERY_REDBEAT_REDIS_URL}
      CELERY_REDBEAT_KEY_PREFIX: ${CELERY_REDBEAT_KEY_PREFIX}
    depends_on:
      - fastapi
      - redis
      - celery_worker

volumes:
  redis_data:
